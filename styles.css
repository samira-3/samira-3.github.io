#profile-pic {
    width: 170px;
    height: 200px;
    border-radius: 50%;
}

img {
   max-width: 100%;
   height: auto;
}

.badge-image {
        vertical-align: middle;
    }

a {
    color: dark-blue;
    text-decoration: none;
}

.navbar a {
    text-decoration: none;
    margin-left: 5px; /* Add spacing between links*/
}

.navbar ul {
    display: inline-block; /* Make the ul (unordered list) behave like an inline element */
    padding: 0; /* Remove any default padding */
}

nav ul.tabs {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex; /* Display the tabs in a row */
    background-color: rgba(95, 166, 92, 0.67);
}

nav ul.tabs li {
    flex: 1;
    text-align: center;
    /*Remove the bullet points and adjust padding for each tab */
    padding: 10px 0;
    margin: 0;
}

nav ul.tabs li a {
    display: block;
    padding: 5px 15px;
    text-decoration: none;
    color: white;
    transition: background-color 0.3s;
}

nav ul.tabs li a.active {
    background-color: #83f28;
}

/*.tab-content {
    padding: 20px;
    background-color: #f0f0f0;
    min-height: 300px;
}*/

.header-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
}

.header-details {
    display: flex;
    flex-direction: column;
    align-items: flex-start; /* Aligns the content to the left */
}

#contact {
    margin-left: 15px; /* Pushes the contact section to the right */
    align-self: flex-start; /* Aligns the contact section to the top */
}

#certifications p::before {
    content: ""; /* default value; we'll override it per class */
    display: inline-block;
    vertical-align: middle;
    margin-right: 10px; /* space between logo and text */
    width: 20px; /* width of the logo */
    height: 20px; /* height of the logo */
    background-size: contain;
    background-repeat: no-repeat;
}

.google::before {
    background-image: url('google_cert.png');
}

.codepath::before {
    background-image: url('codepath_logo.png');
}

.logo {
    width: 30px; /* or the width you want */
    height: 30px; /* or the height you want */
    vertical-align: middle;
    margin-right: 10px; /* space between logo and text */
}

/*Education*/
/* style the card container */
.school {
    display: grid;
    grid-template-columns: 1fr;
    gap: 10px;
    position: relative;
    background-color: transparent;
    perspective: 1000px; /* This gives a 3D space meaning to the container, allowing 3D-transformed children to appear in 3D space */
    width: 200px;
    height: 320px;
    border: 1px solid #f1f1f1
    box-shadow: 0px 0px 15px rgba(0,0,0,0.2); /* A subtle shadow for depth */
}

.school-logo {
    width: 90px; /* Adjust to your desired width */
    height: 90px; /* Adjust to your desired height */
}

.logo-container, .school-name {
    text-align: center;
    width: 100%;
}

/* Style the card's inner content. This will perform the rotation */
.school-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s; /* Perform a smooth flip effect */
    transform-style: preserve-3d; /* This allows the child elements of the container to exist in 3D space */
}
/* When the card is hovered, the flip-card-inner should rotate */
.school:hover .school-inner {
    transform: rotateY(180deg); /* Rotate the inner content 180 degrees on Y axis */
}
/* Style the front and back faces of the card */
.school-header-front, .school-details-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Hide the back of the pane during the swap */
}

.school-header-front {
    background-color: rgba(95, 166, 92, 0.67);
    color: white;
    z-index: 2; /* Positioned above the back card face */
}

.school-details-back {
    background-color: rgba(95, 166, 92, 0.67);
    color: white;
    transform: rotateY(180deg); /* Rotate the back card face by 180 degrees, essentially hiding it out of view initially */
    z-index: 1;
    text-align: left;
    font-size: 11px;
    margin: 15px;
    padding: 15px;
}

li {
    text-indent: 15px; /* Adjust the value as needed */
}

close-button {
    position: absolute;
    right: 10px;
    top: 10px;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
}

body {
    background-image: url('pic.jpg');
    background-size: cover;
}

/*Experience*/
/* Make the job boxes into circles */
.job-box {
    background-color: rgba(95, 166, 92, 0.67);
    border-radius: 50%;     /* Makes the div circular */
    overflow: hidden;       /* Ensures content inside doesn't spill out of the circle */
    width: 200px;           /* Set the diameter of the circle, you can adjust as needed */
    height: 200px;          /* Should be equal to the width for a perfect circle */
    margin: 15px;           /* Give it some spacing */
    transition: all 0.3s;   /* Optional: smooth transition for hover effects */
    display: flex;
    flex-direction: column; /* stacks children vertically */
    justify-content: center; /* center children horizontally */
    align-items: center; /* center children vertically */
    text-align: center; /* centers the inline content like text */
    position: relative;  /* to ensure that the absolute positioning of details is relative to the job-box */
}
/* Hover effect to show there's more details when hovered (optional) */
.job-box:hover {
    transform: scale(1.05); /* Slightly increase the size when hovered */
    box-shadow: 0px 0px 15px rgba(0,0,0,0.2); /* A subtle shadow for depth */
}
/* Make the job boxes three in a row */
.job-container {
    display: flex;
    flex-wrap: wrap;      /* Allow wrapping to the next row if more than 3 */
    position: relative; /* For absolute positioning of the .job-details */
    justify-content: space-between; /* Distribute the job boxes evenly */
}

.job-header {
    padding: 10px;
    /*background-color: rgba(95, 166, 92, 0.67);*/
    cursor: pointer;
    /*border-bottom: 1px solid white;*/
}
.job-header .logo {
    display: block;
    max-width: 100px;  /* Adjust this value according to your preferred logo size */
    margin: 0 auto;    /* Centers the logo if the job-header has a fixed width */
    padding-bottom: 10px;  /* Space below the logo */
}
.job-header h5, .job-header h6 {
    text-align: center;  /* Centers the text */
    margin: 10px 0;       /* Adds some vertical spacing between elements */
}

.job-details{
    display: none;
    padding: 10px;
    background-color: rgba(95, 166, 92, 0.67);
    position: fixed; /* to make it pop up on a fixed position */
    /* Optional: Add some margin for space between items */
    margin-right: 10px;
    margin-bottom: 10px;
    /* No need for position, top, left, and z-index for flowing left to right */
    /*top: 10%; /* adjust these values as needed */
    /*left: 70%;
    z-index: 10; /* ensure it's above other content */
    align-text: left;
    transition: all 15s ease; // smoothens the display transition*/
}

/* Active state, for example when a button is clicked to show the job details */
.job-details.active {
    /*display: block; /* Display it */
    /*opacity: 1; /* Fully visible */
    /*transform: scale(1); /* Original size */
}*/

/*.job-details {
    display: none !important;
    padding: 10px;
    background-color: rgba(95, 166, 92, 0.67);
    /*width: 200px; /* adjust as needed */
    /*position: fixed; /* to make it pop up on a fixed position */
    /*top: 10%; /* adjust these values as needed */
    /*left: 70%;*/
    /*position: relative; 
    top: 100%; /* right below the job box */
    /*left: 0;*/
    /*width: 100%;
    /*z-index: 1000; /* ensure it's above other content */
/*}*/

.job-header:hover + .job-details {
    display: block !important;
}

.container {
    max-width: 700px;
    width: 100%;
    margin: 0 auto;
    margin: 2rem auto;
    padding: 2rem;
    background-color: rgba(202, 112, 125, 0.67);
    border-radius: 5px;
}

.grid {
   display: flex;
   flex-wrap: wrap;
}

.grid-item {
   flex: 1;  /* Flex items will adjust their width based on available space */
}

body {
    font-family: New Times Roman, sans-serif;
    background-color: #f6bfbc; 
    background-image: url('space-cyber.jpg'); 
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;  /*Ensure the background image is centered*/
    min-height: 100vh;  /* Ensure the body always takes up at least the full height of the viewport*/
    color: white;
    overflow-x: hidden;
    margin: 0;
}

/* Global background setting for screens smaller than 600px */
@media only screen and (max-width: 600px) {
    body {
        background-position: center center;
        background-color: #f5b878;
    }
}

/* For desktops and large screens */
@media (min-width: 601px) {
   /* Add styles for desktops and large screens here */
    .job-box {
        width: 170px;
        height: 170px;
    }
}

/* For tablets */
@media (min-width: 401px) and (max-width: 600px) {
   /* Add styles for tablets here */
    .job-box {
        width: 200px;
        height: 200px;
    }
}

/* For smaller screens, you may want to adjust how the job boxes appear */
@media (max-width: 900px) {
    .job-box {
        width: 200px;
        height: 200px;
    }
}

/* For mobile devices */
@media (max-width: 400px) {
   /* Add styles for mobile devices here */
    .job-container {
        flex-direction: column;
        align-items: center;
    }

    .job-box {
        margin: 15px auto;
    }
    /*Mobile styles for school details */
    .school-details, .job-details {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;  /* use a percentage to make sure it fits well on mobile, adjust as needed */
        transform: translate(-50%, -50%);  /* this ensures centering regardless of the exact size of .school-details */
        z-index: 10;  /* raises it above other content */
        overflow-y: auto;  /* adds scrolling if content overflows */
        max-height: 80vh;  /* limits height to avoid edge-to-edge content on mobile */
    }
}
    
@media (max-width: 600px) {
    .school-header:hover + .school-details {
        display: block;
        align-items: center;
    }
}

